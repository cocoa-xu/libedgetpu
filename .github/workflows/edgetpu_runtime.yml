name: edgetpu-runtime

on:
  pull_request:
    paths-ignore:
        - '**/*.md'
        - 'LICENSE*'
  push:
    tags:
      - 'v*'
    branches:
      - master
      - test-*
    paths-ignore:
    - '**/*.md'
    - 'LICENSE*'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_linux:
    runs-on: ubuntu-20.04
    env:
      LIBUSB_VER: "1.0.26"
      USE_BAZEL_VERSION: "5.4.0"
    strategy:
      fail-fast: false
      matrix:
        pair:
          - host: "x86_64-linux-gnu"
            cc: "gcc"
            cxx: "g++"
            cpu: "k8"
            c_compiler: gcc
            cpp_compiler: g++
          - host: "armv7l-linux-gnueabihf"
            cc: "arm-linux-gnueabihf-gcc-9"
            cxx: "arm-linux-gnueabihf-g++-9"
            cpu: "armv7a"
            c_compiler: gcc-arm-linux-gnueabihf
            cpp_compiler: g++-arm-linux-gnueabihf
          - host: "aarch64-linux-gnu"
            cc: "aarch64-linux-gnu-gcc"
            cxx: "aarch64-linux-gnu-g++"
            cpu: "aarch64"
            c_compiler: gcc-aarch64-linux-gnu
            cpp_compiler: g++-aarch64-linux-gnu
          - host: "riscv64-linux-gnu"
            cc: "riscv64-linux-gnu-gcc"
            cxx: "riscv64-linux-gnu-g++"
            cpu: "riscv64"
            c_compiler: gcc-riscv64-linux-gnu
            cpp_compiler: g++-riscv64-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install system dependencies
        run: |
          sudo apt-get install -y build-essential automake autoconf pkg-config bc m4 unzip zip curl git gzip python3 python3-numpy ca-certificates ${{ matrix.pair.c_compiler }} ${{ matrix.pair.cpp_compiler }}

      - name: Compile libusb
        run: |
          wget "https://github.com/libusb/libusb/releases/download/v${LIBUSB_VER}/libusb-${LIBUSB_VER}.tar.bz2" -O "libusb-${LIBUSB_VER}.tar.bz2"
          tar -xf "libusb-${LIBUSB_VER}.tar.bz2"
          cd "libusb-${LIBUSB_VER}"
          ./configure CFLAGS="-fPIC" CC="${{ matrix.pair.cc }}" --host="${{ matrix.pair.host }}" --enable-static --disable-shared --disable-udev --prefix=/usr
          make -j`nproc`
          sudo make install

      - name: Compile libedgetpu
        run: |
          export CC="${{ matrix.pair.cc }}"
          export CXX="${{ matrix.pair.cxx }}"
          CPU="${{ matrix.pair.cpu }}" make libedgetpu

      - name: Release
        run: |
          export PACK_DIR=edgetpu_runtime

          export LIBEDGETPU_NAME="${{ matrix.pair.cpu }}"
          export TRIPLET="${{ matrix.pair.host }}"
          bash scripts/pack.sh out "${LIBEDGETPU_NAME}" "${TRIPLET}" "${PACK_DIR}"
          export ARTEFACT_FILENAME="edgetpu_runtime_${TRIPLET}_${GITHUB_REF##*/}"
          tar -czf "${ARTEFACT_FILENAME}.tar.gz" "${PACK_DIR}"
          rm -rf "${PACK_DIR}"

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "edgetpu_runtime_*.tar.gz"

  build_macos:
    runs-on: macos-11
    env:
      USE_BAZEL_VERSION: "5.4.0"
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          brew install libusb
          pip3 install numpy

      - name: Compile
        run: |
          CPU=darwin_arm64 make
          CPU=darwin_x86_64 make

      - name: codesign
        run: |
          codesign -f --sign - "$(pwd)/out/direct/darwin_arm64/libedgetpu.1.0.dylib"
          codesign -f --sign - "$(pwd)/out/direct/darwin_x86_64/libedgetpu.1.0.dylib"
          codesign -f --sign - "$(pwd)/out/throttled/darwin_arm64/libedgetpu.1.0.dylib"
          codesign -f --sign - "$(pwd)/out/throttled/darwin_x86_64/libedgetpu.1.0.dylib"

      - name: Release
        run: |
          export PACK_DIR=edgetpu_runtime

          export LIBEDGETPU_NAME=darwin_arm64
          export TRIPLET=aarch64-apple-darwin
          bash scripts/pack.sh out "${LIBEDGETPU_NAME}" "${TRIPLET}" "${PACK_DIR}"
          export ARTEFACT_FILENAME="edgetpu_runtime_${TRIPLET}_${GITHUB_REF##*/}"
          tar -czf "${ARTEFACT_FILENAME}.tar.gz" "${PACK_DIR}"
          rm -rf "${PACK_DIR}"

          export LIBEDGETPU_NAME=darwin_x86_64
          export TRIPLET=x86_64-apple-darwin
          bash scripts/pack.sh out "${LIBEDGETPU_NAME}" "${TRIPLET}" "${PACK_DIR}"
          export ARTEFACT_FILENAME="edgetpu_runtime_${TRIPLET}_${GITHUB_REF##*/}"
          tar -czf "${ARTEFACT_FILENAME}.tar.gz" "${PACK_DIR}"
          rm -rf "${PACK_DIR}"

      - uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: "edgetpu_runtime_*.tar.gz"
